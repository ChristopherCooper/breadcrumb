{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Breadcrumb","tagline":"A bundle for Laravel","body":"# Breadcrumb\r\n\r\nBreadcrumb is a simple bundle made for the [Laravel framework](http://laravel.com/). It's goal is to lend a helping hand with the creation and management of breadcrumbs. If you have any issues with it, or have suggestions/questions, just contact me on github, or post an issue/feature request.\r\n\r\n## Features\r\n\r\n* Uses primarily language files to translate breadcrumb segments\r\n* Can provide a 2 layered translation method*\r\n* Segments can be URI segments or custom arrays\r\n* Can dump the results in either PHP arrays, or JSON arrays\r\n* Can produce full html breadcrumbs which can be formatted, let it be either html attributes or casing options\r\n* Can create Twitter Bootstrap / Zurb Foundation breadcrumbs as well\r\n* Segments can be ignored/removed/appended in any number from both sides\r\n\r\n\\* 2 layered because (if configured so) it can get the translations from: language folders in bundles named as controllers, or this bundle it self. \r\n\r\n## Changelog\r\n\r\n### Breadcrumb 1.2\r\n- Refactored the comments in the code.\r\n- Fixed bundle initialization bug where the bundle started with an auto translation.\r\n- Added support for proper slug handling.\r\n- Added Zurb Foundation output generator.\r\n- Added `get_raw_segments()` for better debugging.\r\n- Added `append()`, so now any number of segments can be added to either side of the working array.\r\n- Added `remove()`, which can remove any number of segments from the working array, index handling provided.\r\n- Added `slug_separator` and `word_separator` options to config file.\r\n- Replaced inferior documentation with a new, better, more detailed one.\r\n\r\n### Breadcrumb 1.1\r\n- Renamed methods for better reading.\r\n- Added Bootstrap output support.\r\n- Added external bundle translation file handling option.\r\n- Provided usage examples in the docs.\r\n- Added `scan_bundles`, `output_format` option to the config file.\r\n\r\n### Breadcrumb 1.0\r\n- Bundle start.\r\n\r\n##Quickstart\r\n\r\n* Clone Breadcrumb into *APPPATH/bundles/*\r\n  * ```git clone https://github.com/noherczeg/breadcrumb.git breadcrumb```\r\n* Edit *APPPATH/application/bundles.php*\r\n\r\n```php\r\n\r\n<?php\r\n// APPPATH/application/bundles.php\r\nreturn array(\r\n  'breadcrumb' => array('auto' => true),\r\n);\r\n```\r\n* The bundle uses the *APPPATH/application/config/application.php* file to determine which language profile to load from the bundle's (external bundles) language folder\r\n* No migration needed\r\n\r\n## Usage examples:\r\n\r\n### A) Basic functions:\r\n\r\n#### Generating breadcrumbs from current URI:\r\nWith an URL like: `http://localhost/laravel-fork/public/admin/cron-jobs`, calling `echo Breadcrumb::make();` will produce this:\r\n```php\r\n<a href=\"http://localhost/laravel-fork/admin/\">administration</a> / cron jobs\r\n```\r\n\r\nSince no parameters where given, it generated the links, etc.. according to the default settings\r\n\r\n#### Dumping current working array:\r\nUsing an URL like: `http://localhost/laravel-fork/public/test-case/12`, calling `var_dump(get_raw_segments());` returns:\r\n```php\r\narray\r\n  0 => string 'test-case' (length=9)\r\n  1 => string '12' (length=2)\r\n```\r\n\r\n#### Dumping a translated array from the URI:\r\nWith an URL like: `http://localhost/laravel-fork/public/browser/firefox`, calling `var_dump(Breadcrumb::dump());` will return something like this:\r\n```php\r\narray\r\n  0 => string 'browser' (length=7)\r\n  1 => string 'a great browser' (length=15)\r\n```\r\nDoing the same, but with JSON array as result: `var_dump(Breadcrumb::dump('json'));` returns:\r\n\r\n```php\r\n[\"browser\",\"a great browser\"]\r\n```\r\n#### Generating twitter bootstrap breadcrumbs from the current URI:\r\nCalling `echo Breadcrumb::make('bootstrap');` on: `http://localhost/laravel-fork/public/browser/admin/whatever`,  will produce:\r\n```php\r\n<ul class=\"breadcrumb\">\r\n    <li>\r\n        <a href=\"http://localhost/laravel-fork/public/browser/\">browser</a> \r\n        <span class=\"divider\">/</span>\r\n    </li>\r\n    <li>\r\n        <a href=\"http://localhost/laravel-fork/public/browser/admin/\">administration</a> \r\n        <span class=\"divider\">/</span>\r\n    </li>\r\n    <li class=\"active\">no whatever please :P</li>\r\n</ul>\r\n\r\n```\r\n\r\n#### Generating Zurb Foundation breadcrumbs from the current URI:\r\nDone exactly the same way, but with different parameter: `echo Breadcrumb::make('foundation');`\r\n\r\n### B) Diving in a bit more:\r\n\r\n#### Generating breadcrumbs from the current URI with a dash as separator:\r\nYou can do this with `echo Breadcrumb::make('html', null, null, '-');` on the current URL\r\n\r\n```php\r\n<a href=\"http://localhost/laravel-fork/public/browser/\">browser</a> - <a href=\"http://localhost/laravel-fork/public/browser/firefox-is-pro/\">a great browser</a> - poke\r\n```\r\n\r\n#### Generating breadcrumbs with custom attributes from custom source:\r\nTo achieve this you will need to call two methods in the process:\r\n\r\n- First translate a custom array**:\r\n\r\n`Breadcrumb::translate(array('users', 'add'));`.\r\n\r\n- Then write the results to the output while providing an array with the formatting parameters\\*** into the `make()` method\r\n\r\n`echo Breadcrumb::make('html', Breadcrumb::dump(), array('class' => 'breadcrumb_link_class'));`\r\n\r\n```php\r\n// generated html code:\r\n<a class=\"breadcrumb_link_class\" href=\"http://localhost/laravel-fork/public/users/\">users</a> / add\r\n```\r\n\\** Always do a translate first, otherwise generate_html will use the current URI\r\n\r\n\\*** Formatting links is achieved the exact same way as it is done with normal code in a Laravel project. Please check http://laravel.com/docs/views/html#links for other examples.\r\n\r\n#### Replacing first element of the current URI with a custom one:\r\nThis is done by two steps as well:\r\n\r\n- First remove the unwanted element with `Breadcrumb::remove(0);`\r\n\r\n- Then add you own element, like `Breadcrumb::append('Home');`\r\n\r\n```php\r\n// The URL before replacement: http://localhost/laravel-fork/public/users/list\r\n// \r\n// generated html code after replacement:\r\n<a class=\"breadcrumb_link_class\" href=\"http://localhost/laravel-fork/public/home/\">Main page</a> / Same List\r\n```\r\n\r\n> Please note that trying to remove not existing elements will produce an exception. Also if you are removing elements in a loop, you may want to check out the method it self in the bundle, since handling indexes may differ in each task you are working with and you have a second parameter which could be used in these cases!\r\n\r\n>You can append as many elements as you want of course.\r\n\r\n"}